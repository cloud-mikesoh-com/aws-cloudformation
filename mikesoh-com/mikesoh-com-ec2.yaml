Description: mikesoh-com EC2 Deployment
Parameters:
  deployDate:
    Type: String
    Description: Date for the deployment
    Default: 1970-01-01 00:00:00
  commitSha: 
    Type: String
    Description: Git commit SHA
    Default: nocommit
  DatadogApiKey:
    Type: AWS::SSM::Parameter::Value<String>
    Description: API Key for Datadog
    Default: '/us-east-1/datadog'
  SshKeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: mike-starbuck-ubuntu

Resources:
  MikesohEc2Compute:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init: 
        configSets: 
          default:
            - 'SshKeys' 
            - 'AwsCli'
            - 'Docker'
            - 'Datadog'
            - 'StandardPackages'

        SshKeys:
          files:
            /home/ubuntu/.ssh/authorized_keys:
              source: 'https://github.com/sohmc/ssh-keys/releases/download/latest/authorized_keys'
              mode: '000600'
              owner: ubuntu
              group: ubuntu
          
          commands:
            SshKeyInstallSignal:
              test: test -e /home/ubuntu/.ssh/authorized_keys
              ignoreErrors: false
              command: !Sub |
                  #!/bin/bash -xe

                  echo "Sending signal for SshKeyInstall" >> /var/log/caprica-init.log

                  FILESIZE=$(stat -c%s "~ubuntu/.ssh/authorized_keys")

                  echo "Checking filesize of authorized_keys" >> /var/log/caprica-init.log
                  test -e ${!FILESIZE} > 150

                  echo "Done" >> /var/log/caprica-init.log

        Datadog: 
          services:
            DatadogService:
              enabled: true
              ensureRunning: true
              commands:
                - InstallDatadogAgent

          commands:
            InstallDatadogAgent:
              env:
                DD_API_KEY: !Sub "${DatadogApiKey}"
              command: |
                #!/bin/bash -xe
                cd /tmp
                echo "standard:DatadogAgent" >> /var/log/caprica-init.log
                curl -Ls https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh -o install_datadog.sh
                bash install_datadog.sh

                sed -i 's/^# logs_enabled: false$/logs_enabled: true/' /etc/datadog-agent/datadog.yaml
                systemctl stop datadog-agent.service && systemctl start datadog-agent.service

            SignalDatadogAgentCondition:
              test: test -e /usr/bin/datadog-agent
              ignoreErrors: false
              command: !Sub |
                #!/bin/bash -xe

                /usr/bin/datadog-agent version
                /usr/bin/datadog-agent version >> /var/log/caprica-init.log

        AwsCli:
          packages:
            apt:
              zip: []
              unzip: []
          commands: 
            InstallAwsCli:
              ignoreErrors: true
              command: !Sub |
                #!/bin/bash -xe
                cd /tmp

                echo 'starting AWS CLI installation' >> /var/log/caprica-init.log
                whoami >> /var/log/caprica-init.log

                pwd >> /var/log/caprica-init.log
                curl -Ls 'https://raw.githubusercontent.com/cloud-mikesoh-com/aws-bootstrap/main/packages/01-awscli.sh' -o awscli.sh
                bash awscli.sh

                aws --version
                aws --version >> /var/log/caprica-init.log

        Docker:
          services:
            DockerCeService:
              enabled: true
              ensureRunning: true
              commands:
                - InstallDockerCE

          commands:
            InstallDockerCE:
              ignoreErrors: true
              command: |
                #!/bin/bash -xe
                cd /tmp

                echo 'Starting Docker-CE installation...' >> /var/log/caprica-init.log

                curl -Ls 'https://raw.githubusercontent.com/cloud-mikesoh-com/aws-bootstrap/main/packages/50-docker.sh' -o docker.sh
                bash docker.sh

                /usr/sbin/usermod -aG docker ubuntu
            
            SignalInstallDockerCeCondition:
              test: test -e /usr/bin/docker
              ignoreErrors: false
              command: !Sub |
                #!/bin/bash -xe

                /usr/bin/docker --version
                /usr/bin/docker --version >> /var/log/caprica-init.log
                echo 'Docker install completed' >> /var/log/caprica-init.log

        StandardPackages:
          packages:
            apt:
              mariadb-client: []
              nginx: []
          users:
            mike:
              groups: [ 'docker' ]
              uid: 1501
            linus:
              groups: [ 'docker' ]
              uid: 1502

    Properties:
      InstanceType: 't4g.small'
      # Ubuntu 22.04 LTS Release 20230516 for arm64 instances
      ImageId: 'ami-0a0c8eebcdd6dcbd0'
      IamInstanceProfile: 'ec2-user-role'
      AvailabilityZone: 'us-east-1d'
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: 'stop'
      SubnetId: !ImportValue 'mikesoh-com-networking:NewCapricaMikesohComputeSubnet'
      KeyName: !Ref 'SshKeyName'

      BlockDeviceMappings:
        - DeviceName: '/dev/sda1'
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: 50
            VolumeType: gp3
      
      SecurityGroupIds:
        - !ImportValue 'mikesoh-com-networking:MikesohStackSG'
        - !ImportValue 'NewCapricaVpc-Deploy:galacticaSG'
      Tags:
        - Key: managedBy
          Value: !Join ['-', ['CloudFormationDeployment', !Ref 'commitSha'] ]
        - Key: deployDate
          Value: !Ref 'deployDate'

Outputs:
  MikesohEc2ComputeInstanceId:
    Value: !Ref 'MikesohEc2Compute'
    Export:
      Name: !Join [':', [ !Ref 'AWS::StackName', 'MikesohEc2Compute' ]]
